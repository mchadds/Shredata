[{"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\index.tsx":"1","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\reportWebVitals.ts":"2","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\App.tsx":"3","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\Map.tsx":"4","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\TwentyFourHourSnowChart.tsx":"5","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\FourtyEightHourSnowChart.tsx":"6","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\SevenDaySnowChart.tsx":"7","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalSnowChartComparison.tsx":"8"},{"size":1731,"mtime":1610315254509,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":6873,"mtime":1610315722402,"results":"12","hashOfConfig":"10"},{"size":4833,"mtime":1610315254492,"results":"13","hashOfConfig":"10"},{"size":4370,"mtime":1610315254493,"results":"14","hashOfConfig":"10"},{"size":3394,"mtime":1609859968605,"results":"15","hashOfConfig":"10"},{"size":3370,"mtime":1609859968606,"results":"16","hashOfConfig":"10"},{"size":5633,"mtime":1609815079956,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1356jc6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\index.tsx",["39"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\reportWebVitals.ts",[],["40","41"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\App.tsx",["42","43","44","45","46","47","48","49"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\Map.tsx",["50","51","52","53","54"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\TwentyFourHourSnowChart.tsx",["55","56"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\FourtyEightHourSnowChart.tsx",["57","58"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { ResolvedTypeReferenceDirectiveWithFailedLookupLocations } from 'typescript';\r\n\r\nclass FourtyEightHourSnowChart extends Component {\r\n    options: Highcharts.Options;\r\n    // The wrapper exports only a default component class that at the same time is a\r\n    // namespace for the related Props interface (HighchartsReact.Props). All other\r\n    // interfaces like Options come from the Highcharts module itself.\r\n\r\n    constructor(props: any, options: Highcharts.Options) {\r\n        super(props, options);\r\n        this.props = props;\r\n        this.options = options;\r\n    }\r\n    // componentDidMount() {\r\n    //     // example of use\r\n    //     this.internalChart.addSeries({ data: [1, 2, 3] })\r\n    //   }\r\n\r\n    props = {\r\n        resorts: [\r\n            {\r\n                _id: 0,\r\n                latitude: 0,\r\n                longitude: 0,\r\n                snowreport: {\r\n                    updateTime: Date.now() - 1,\r\n                    values: {\r\n                        past24Hours: 0,\r\n                        past48Hours: 0,\r\n                        past7Days: 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    create48HourSnowfallSeries(resorts: any) {\r\n        return resorts.map((resort: { _id: any; snowreport: { values: { past48Hours: any } } }) => {\r\n            return {\r\n                name: resort._id,\r\n                y: resort.snowreport.values.past48Hours\r\n            };\r\n        });\r\n    }\r\n\r\n    createHighChartOptions(resorts: any) {\r\n        const options: Highcharts.Options = {\r\n            title: {\r\n                text: 'Past 48 Hours Snowfall'\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    stacking: 'normal'\r\n                },\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y} cm'\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                pointFormat: '<span>Snowfall</span>: <b>{point.y} cm</b>'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                title: {\r\n                    text: 'Resorts'\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Snow'\r\n                },\r\n                labels: {\r\n                    format: '{value} cm'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'column',\r\n                    name: 'Snowfall',\r\n                    data: this.create48HourSnowfallSeries(resorts)\r\n                }\r\n            ],\r\n            legend: {\r\n                enabled: false\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const { resorts } = this.props;\r\n        this.options = this.createHighChartOptions(resorts);\r\n        return (\r\n            <div style={{ width: '55%' }}>\r\n                <HighchartsReact highcharts={Highcharts} options={{ ...this.options }} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FourtyEightHourSnowChart;\r\n",["59","60"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\SevenDaySnowChart.tsx",["61","62"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { ResolvedTypeReferenceDirectiveWithFailedLookupLocations } from 'typescript';\r\n\r\nclass SevenDaySnowChart extends Component {\r\n    options: Highcharts.Options;\r\n    // The wrapper exports only a default component class that at the same time is a\r\n    // namespace for the related Props interface (HighchartsReact.Props). All other\r\n    // interfaces like Options come from the Highcharts module itself.\r\n\r\n    constructor(props: any, options: Highcharts.Options) {\r\n        super(props, options);\r\n        this.props = props;\r\n        this.options = options;\r\n    }\r\n    // componentDidMount() {\r\n    //     // example of use\r\n    //     this.internalChart.addSeries({ data: [1, 2, 3] })\r\n    //   }\r\n\r\n    props = {\r\n        resorts: [\r\n            {\r\n                _id: 0,\r\n                latitude: 0,\r\n                longitude: 0,\r\n                snowreport: {\r\n                    updateTime: Date.now() - 1,\r\n                    values: {\r\n                        past24Hours: 0,\r\n                        past48Hours: 0,\r\n                        past7Days: 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    create7DaySnowfallSeries(resorts: any) {\r\n        return resorts.map((resort: { _id: any; snowreport: { values: { past7Days: any } } }) => {\r\n            return {\r\n                name: resort._id,\r\n                y: resort.snowreport.values.past7Days\r\n            };\r\n        });\r\n    }\r\n\r\n    createHighChartOptions(resorts: any) {\r\n        const options: Highcharts.Options = {\r\n            title: {\r\n                text: 'Past 7 Days Snowfall'\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    stacking: 'normal'\r\n                },\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y} cm'\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                pointFormat: '<span>Snowfall</span>: <b>{point.y} cm</b>'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                title: {\r\n                    text: 'Resorts'\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Snow'\r\n                },\r\n                labels: {\r\n                    format: '{value} cm'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'column',\r\n                    name: 'Snowfall',\r\n                    data: this.create7DaySnowfallSeries(resorts)\r\n                }\r\n            ],\r\n            legend: {\r\n                enabled: false\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const { resorts } = this.props;\r\n        this.options = this.createHighChartOptions(resorts);\r\n        return (\r\n            <div style={{ width: '55%' }}>\r\n                <HighchartsReact highcharts={Highcharts} options={{ ...this.options }} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SevenDaySnowChart;\r\n",["63","64"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalSnowChartComparison.tsx",["65","66","67"],{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":23},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":32},{"ruleId":"68","severity":1,"message":"77","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":25},{"ruleId":"68","severity":1,"message":"78","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":35},{"ruleId":"68","severity":1,"message":"79","line":8,"column":10,"nodeType":"70","messageId":"71","endLine":8,"endColumn":16},{"ruleId":"68","severity":1,"message":"80","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":24},{"ruleId":"68","severity":1,"message":"81","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":65,"column":22,"nodeType":"84","messageId":"85","endLine":65,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":67,"column":29,"nodeType":"84","messageId":"85","endLine":67,"endColumn":31},{"ruleId":"68","severity":1,"message":"86","line":3,"column":21,"nodeType":"70","messageId":"71","endLine":3,"endColumn":27},{"ruleId":"68","severity":1,"message":"87","line":3,"column":43,"nodeType":"70","messageId":"71","endLine":3,"endColumn":48},{"ruleId":"68","severity":1,"message":"88","line":3,"column":73,"nodeType":"70","messageId":"71","endLine":3,"endColumn":85},{"ruleId":"82","severity":1,"message":"83","line":48,"column":22,"nodeType":"84","messageId":"85","endLine":48,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":50,"column":29,"nodeType":"84","messageId":"85","endLine":50,"endColumn":31},{"ruleId":"68","severity":1,"message":"89","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"90","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":65},{"ruleId":"68","severity":1,"message":"89","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"90","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":65},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},{"ruleId":"68","severity":1,"message":"89","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"90","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":65},{"ruleId":"72","replacedBy":"93"},{"ruleId":"74","replacedBy":"94"},{"ruleId":"68","severity":1,"message":"89","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"90","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":100,"column":133,"nodeType":"97","messageId":"98","endLine":100,"endColumn":135},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'FourtyEightHourSnowChart' is defined but never used.","'SevenDaySnowChart' is defined but never used.","'IntervalSnowChartComparison' is defined but never used.","'format' is defined but never used.","'SelectCallback' is defined but never used.","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Marker' is defined but never used.","'Popup' is defined but never used.","'useMapEvents' is defined but never used.","'ReactDom' is defined but never used.","'ResolvedTypeReferenceDirectiveWithFailedLookupLocations' is defined but never used.",["99"],["100"],["99"],["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]