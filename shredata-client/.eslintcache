[{"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\index.tsx":"1","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\reportWebVitals.ts":"2","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\App.tsx":"3","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\Map.tsx":"4","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\TwentyFourHourSnowChart.tsx":"5","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\FourtyEightHourSnowChart.tsx":"6","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\SevenDaySnowChart.tsx":"7","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalSnowChartComparison.tsx":"8","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalDropDown.tsx":"9","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalDropdown.tsx":"10"},{"size":1731,"mtime":1609864103042,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":4531,"mtime":1610074706676,"results":"14","hashOfConfig":"12"},{"size":3681,"mtime":1610027549741,"results":"15","hashOfConfig":"12"},{"size":3638,"mtime":1610074661730,"results":"16","hashOfConfig":"12"},{"size":3394,"mtime":1609859968605,"results":"17","hashOfConfig":"12"},{"size":3370,"mtime":1609859968606,"results":"18","hashOfConfig":"12"},{"size":5633,"mtime":1609815079956,"results":"19","hashOfConfig":"12"},{"size":1210,"mtime":1609946136775,"results":"20","hashOfConfig":"12"},{"size":1381,"mtime":1610073334397,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1356jc6",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\index.tsx",["50"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n\r\n// import * as React from 'react';\r\n// import * as ReactDom from 'react-dom';\r\n// import * as Highcharts from 'highcharts';\r\n// import HighchartsReact from 'highcharts-react-official';\r\n\r\n// // The wrapper exports only a default component class that at the same time is a\r\n// // namespace for the related Props interface (HighchartsReact.Props). All other\r\n// // interfaces like Options come from the Highcharts module itself.\r\n\r\n// const options: Highcharts.Options = {\r\n//     title: {\r\n//         text: 'My chart'\r\n//     },\r\n//     series: [\r\n//         {\r\n//             type: 'line',\r\n//             data: [1, 2, 3]\r\n//         }\r\n//     ]\r\n// };\r\n\r\n// // React supports function components as a simple way to write components that\r\n// // only contain a render method without any state (the App component in this\r\n// // example).\r\n\r\n// const App = (props: HighchartsReact.Props) => (\r\n//     <div>\r\n//         <HighchartsReact highcharts={Highcharts} options={options} {...props} />\r\n//     </div>\r\n// );\r\n\r\n// // Render your App component into the #root element of the document.\r\n\r\n// ReactDom.render(<App />, document.getElementById('root'));\r\n",["51","52"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\reportWebVitals.ts",[],["53","54"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\App.tsx",["55","56","57","58","59"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\Map.tsx",["60"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { TileLayer, Marker, CircleMarker, Popup, MapContainer } from 'react-leaflet';\r\n\r\nclass Map extends Component {\r\n    // this method can decide whether an ajax call should be made to get new data based on props and state objects\r\n    //   componentDidUpdate(prevProps, prevState) {\r\n    //     console.log('prevProps', prevProps);\r\n    //     console.log('prevState', prevState);\r\n    //     if (prevProps.counter.value !== this.props.counter.value) {\r\n    //       // Ajax call and get new data\r\n    //     }\r\n    //   }\r\n    //   // opportunity to do any clean up before componenet is removed from the DOM - otherwise will end up with memory leaks\r\n    //   componentWillUnmount() {\r\n    //     console.log('Counter - Unmount');\r\n    //   }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    props = {\r\n        resorts: [\r\n            {\r\n                _id: 0,\r\n                latitude: 0,\r\n                longitude: 0,\r\n                snowreport: {\r\n                    updateTime: Date.now() - 1,\r\n                    values: {\r\n                        past24Hours: 0,\r\n                        past48Hours: 0,\r\n                        past7Days: 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        const { resorts } = this.props;\r\n        return (\r\n            <div>\r\n                <MapContainer center={[50.82793, -116.84341]} zoom={7.4} scrollWheelZoom={false}>\r\n                    <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                    {resorts.map((resort) => (\r\n                        <CircleMarker key={resort._id} center={[resort.latitude, resort.longitude]} radius={10 + resort.snowreport.values.past24Hours / 1.4} fillOpacity={0.5} stroke={false}>\r\n                            <Popup>\r\n                                {resort._id} <br /> Snowfall: <br /> Past 24 Hours: {resort.snowreport.values.past24Hours} cm <br /> Past 48 Hrs: {resort.snowreport.values.past48Hours} cm <br /> Past\r\n                                7 Days: {resort.snowreport.values.past7Days} cm <br /> Time of Recording: {resort.snowreport.updateTime}\r\n                            </Popup>\r\n                        </CircleMarker>\r\n                    ))}\r\n                </MapContainer>\r\n\r\n                {/* <span\r\n          style={{ marginRight: 2 + \"em\", marginLeft: 1 + \"em\", minWidth: 3 + \"em\" }}\r\n          className={this.getBadgeClasses()}\r\n        >\r\n          {this.formatCount()}\r\n        </span>\r\n        <button\r\n        // pass reference of counter object cause it will make the implementation of the handler simpler\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n        // pass reference of counter object cause it will make the implementation of the handler simpler\r\n          onClick={() => this.props.onDecrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          -\r\n        </button>\r\n        <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // dynamically determine what to display in the count button\r\n    //   formatCount() {\r\n    //     const { value } = this.props.counter;\r\n    //     return value === 0 ? \"Zero\" : value;\r\n    //   }\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\TwentyFourHourSnowChart.tsx",["61","62"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\FourtyEightHourSnowChart.tsx",["63","64"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { ResolvedTypeReferenceDirectiveWithFailedLookupLocations } from 'typescript';\r\n\r\nclass FourtyEightHourSnowChart extends Component {\r\n    options: Highcharts.Options;\r\n    // The wrapper exports only a default component class that at the same time is a\r\n    // namespace for the related Props interface (HighchartsReact.Props). All other\r\n    // interfaces like Options come from the Highcharts module itself.\r\n\r\n    constructor(props: any, options: Highcharts.Options) {\r\n        super(props, options);\r\n        this.props = props;\r\n        this.options = options;\r\n    }\r\n    // componentDidMount() {\r\n    //     // example of use\r\n    //     this.internalChart.addSeries({ data: [1, 2, 3] })\r\n    //   }\r\n\r\n    props = {\r\n        resorts: [\r\n            {\r\n                _id: 0,\r\n                latitude: 0,\r\n                longitude: 0,\r\n                snowreport: {\r\n                    updateTime: Date.now() - 1,\r\n                    values: {\r\n                        past24Hours: 0,\r\n                        past48Hours: 0,\r\n                        past7Days: 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    create48HourSnowfallSeries(resorts: any) {\r\n        return resorts.map((resort: { _id: any; snowreport: { values: { past48Hours: any } } }) => {\r\n            return {\r\n                name: resort._id,\r\n                y: resort.snowreport.values.past48Hours\r\n            };\r\n        });\r\n    }\r\n\r\n    createHighChartOptions(resorts: any) {\r\n        const options: Highcharts.Options = {\r\n            title: {\r\n                text: 'Past 48 Hours Snowfall'\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    stacking: 'normal'\r\n                },\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y} cm'\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                pointFormat: '<span>Snowfall</span>: <b>{point.y} cm</b>'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                title: {\r\n                    text: 'Resorts'\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Snow'\r\n                },\r\n                labels: {\r\n                    format: '{value} cm'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'column',\r\n                    name: 'Snowfall',\r\n                    data: this.create48HourSnowfallSeries(resorts)\r\n                }\r\n            ],\r\n            legend: {\r\n                enabled: false\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const { resorts } = this.props;\r\n        this.options = this.createHighChartOptions(resorts);\r\n        return (\r\n            <div style={{ width: '55%' }}>\r\n                <HighchartsReact highcharts={Highcharts} options={{ ...this.options }} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FourtyEightHourSnowChart;\r\n",["65","66"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\SevenDaySnowChart.tsx",["67","68"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { ResolvedTypeReferenceDirectiveWithFailedLookupLocations } from 'typescript';\r\n\r\nclass SevenDaySnowChart extends Component {\r\n    options: Highcharts.Options;\r\n    // The wrapper exports only a default component class that at the same time is a\r\n    // namespace for the related Props interface (HighchartsReact.Props). All other\r\n    // interfaces like Options come from the Highcharts module itself.\r\n\r\n    constructor(props: any, options: Highcharts.Options) {\r\n        super(props, options);\r\n        this.props = props;\r\n        this.options = options;\r\n    }\r\n    // componentDidMount() {\r\n    //     // example of use\r\n    //     this.internalChart.addSeries({ data: [1, 2, 3] })\r\n    //   }\r\n\r\n    props = {\r\n        resorts: [\r\n            {\r\n                _id: 0,\r\n                latitude: 0,\r\n                longitude: 0,\r\n                snowreport: {\r\n                    updateTime: Date.now() - 1,\r\n                    values: {\r\n                        past24Hours: 0,\r\n                        past48Hours: 0,\r\n                        past7Days: 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    create7DaySnowfallSeries(resorts: any) {\r\n        return resorts.map((resort: { _id: any; snowreport: { values: { past7Days: any } } }) => {\r\n            return {\r\n                name: resort._id,\r\n                y: resort.snowreport.values.past7Days\r\n            };\r\n        });\r\n    }\r\n\r\n    createHighChartOptions(resorts: any) {\r\n        const options: Highcharts.Options = {\r\n            title: {\r\n                text: 'Past 7 Days Snowfall'\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    stacking: 'normal'\r\n                },\r\n                series: {\r\n                    borderWidth: 0,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y} cm'\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                pointFormat: '<span>Snowfall</span>: <b>{point.y} cm</b>'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                title: {\r\n                    text: 'Resorts'\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Snow'\r\n                },\r\n                labels: {\r\n                    format: '{value} cm'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'column',\r\n                    name: 'Snowfall',\r\n                    data: this.create7DaySnowfallSeries(resorts)\r\n                }\r\n            ],\r\n            legend: {\r\n                enabled: false\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const { resorts } = this.props;\r\n        this.options = this.createHighChartOptions(resorts);\r\n        return (\r\n            <div style={{ width: '55%' }}>\r\n                <HighchartsReact highcharts={Highcharts} options={{ ...this.options }} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SevenDaySnowChart;\r\n","C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalSnowChartComparison.tsx",["69","70","71"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalDropDown.tsx",["72"],"C:\\Users\\cdund\\Desktop\\_\\Development\\Shredata\\shredata-client\\src\\components\\IntervalDropdown.tsx",["73","74"],"import React, { Component } from 'react';\r\nimport { DropdownProps } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { SelectCallback } from 'react-bootstrap/esm/helpers';\r\n\r\nclass IntervalDropdown extends Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    props = {\r\n        handleDropdownSelect: (e: any) => {}\r\n        // onSelect: (e: SelectCallback) => {}\r\n    };\r\n\r\n    // handleDropdownSelect = (e: any) => {\r\n    //     console.log(e);\r\n    // };\r\n\r\n    render() {\r\n        //const { handleDropdownSelect } = this.props;\r\n        return (\r\n            <Dropdown onSelect={(e: any) => this.props.handleDropdownSelect(e)}>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    Snowfall Interval\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item eventKey=\"24Hours\">24 Hours</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"48Hours\" href=\"48Hours\">\r\n                        48 Hours\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"7Days\" href=\"7Days\">\r\n                        7 Days\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IntervalDropdown;\r\n",{"ruleId":"75","severity":1,"message":"76","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":23},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"75","severity":1,"message":"85","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":32},{"ruleId":"75","severity":1,"message":"86","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":35},{"ruleId":"75","severity":1,"message":"88","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":16},{"ruleId":"75","severity":1,"message":"89","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":24},{"ruleId":"75","severity":1,"message":"90","line":3,"column":21,"nodeType":"77","messageId":"78","endLine":3,"endColumn":27},{"ruleId":"75","severity":1,"message":"91","line":3,"column":13,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"92","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"75","severity":1,"message":"91","line":3,"column":13,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"92","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","replacedBy":"94"},{"ruleId":"75","severity":1,"message":"91","line":3,"column":13,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"92","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"75","severity":1,"message":"91","line":3,"column":13,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"92","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":100,"column":133,"nodeType":"97","messageId":"98","endLine":100,"endColumn":135},{"ruleId":"75","severity":1,"message":"89","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":24},{"ruleId":"75","severity":1,"message":"99","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":23},{"ruleId":"75","severity":1,"message":"89","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":24},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"'FourtyEightHourSnowChart' is defined but never used.","'SevenDaySnowChart' is defined but never used.","'IntervalSnowChartComparison' is defined but never used.","'format' is defined but never used.","'SelectCallback' is defined but never used.","'Marker' is defined but never used.","'ReactDom' is defined but never used.","'ResolvedTypeReferenceDirectiveWithFailedLookupLocations' is defined but never used.",["100"],["101"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DropdownProps' is defined but never used.","no-global-assign","no-unsafe-negation"]